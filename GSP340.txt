with gcloud shell commands

##########
# TASK 1 #
##########
# create dataset

bq mk covid

#########################
# create table covid.oxford_policy_tracker using data from bigquery-public-data.covid19_govt_response.oxford_policy_tracker

bq query \
    --use_legacy_sql=false \
'CREATE OR REPLACE TABLE covid.oxford_policy_tracker
PARTITION BY date
OPTIONS(
partition_expiration_days=1080,
description="oxford_policy_tracker table in the COVID 19 Government Response public dataset with  an expiry time set to 1080 days."
) AS
SELECT
   *
FROM
   `bigquery-public-data.covid19_govt_response.oxford_policy_tracker`
WHERE
   alpha_3_code NOT IN ("GBR", "BRA", "CAN","USA");'


##########
# TASK 2 #
##########
# mobility column struct already present in covid_data.consolidate_covid_tracker_data
# populate the Struct with the below with data from bigquery-public-data.covid19_google_mobility.mobility_report

bq query \
    --use_legacy_sql=false \
'UPDATE
   `covid_data.consolidate_covid_tracker_data` t0
SET
   t0.mobility.avg_retail      = t1.avg_retail,
   t0.mobility.avg_grocery     = t1.avg_grocery,
   t0.mobility.avg_parks       = t1.avg_parks,
   t0.mobility.avg_transit     = t1.avg_transit,
   t0.mobility.avg_workplace   = t1.avg_workplace,
   t0.mobility.avg_residential = t1.avg_residential
FROM
   ( SELECT country_region, date,
      AVG(retail_and_recreation_percent_change_from_baseline) as avg_retail,
      AVG(grocery_and_pharmacy_percent_change_from_baseline)  as avg_grocery,
      AVG(parks_percent_change_from_baseline) as avg_parks,
      AVG(transit_stations_percent_change_from_baseline) as avg_transit,
      AVG(workplaces_percent_change_from_baseline) as avg_workplace,
      AVG(residential_percent_change_from_baseline)  as avg_residential
      FROM `bigquery-public-data.covid19_google_mobility.mobility_report`
      GROUP BY country_region, date
   ) AS t1
WHERE
   CONCAT(t0.country_name, t0.date) = CONCAT(t1.country_region, t1.date)'

##########
# TASK 3 #
##########
# The query should list countries that do not have any population data and countries that do not have country area information, 
# ordered by country name. 
# If a country has neither population or country area it must appear twice. (UNION ALL)

bq query \
    --use_legacy_sql=false \
'SELECT DISTINCT country_name
FROM `covid_data.oxford_policy_tracker_worldwide`
WHERE population is NULL
UNION ALL
SELECT DISTINCT country_name
FROM `covid_data.oxford_policy_tracker_worldwide`
WHERE country_area IS NULL
ORDER BY country_name ASC'

##########
# TASK 4 #
##########
# Create a new table 'pop_data_2019' within the dataset named as 'covid_data'. 
# The table should initially use the schema defined for the 'covid_19_geographic_distribution_worldwide' 
# table data from the European Center for Disease Control COVID 19 public dataset.

bq query \
    --use_legacy_sql=false \
'CREATE OR REPLACE TABLE covid_data.pop_data_2019 AS
SELECT
  *
FROM 
  `bigquery-public-data.covid19_ecdc.covid_19_geographic_distribution_worldwide`'


   

